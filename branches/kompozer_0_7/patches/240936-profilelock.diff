? profilelock.diff
Index: nsProfile.cpp
===================================================================
RCS file: /cvsroot/mozilla/profile/src/nsProfile.cpp,v
retrieving revision 1.298
diff -u -r1.298 nsProfile.cpp
--- nsProfile.cpp	28 Feb 2004 22:34:02 -0000	1.298
+++ nsProfile.cpp	19 Apr 2004 06:24:40 -0000
@@ -37,7 +37,9 @@
 
 #include "nscore.h" 
 #include "nsProfile.h"
+#ifdef MOZ_PROFILELOCKING
 #include "nsProfileLock.h"
+#endif
 #include "nsIPrefService.h"
 #include "nsIPrefBranch.h"
 
@@ -499,12 +501,14 @@
                 profileURLStr = PROFILE_MANAGER_URL; 
             if (exists)
             {
+#ifdef MOZ_PROFILELOCKING
                 // If the profile is locked, we need the UI
                 nsCOMPtr<nsILocalFile> localFile(do_QueryInterface(curProfileDir));
                 nsProfileLock tempLock;
                 rv = tempLock.Lock(localFile);
                 if (NS_FAILED(rv))
                     profileURLStr = PROFILE_MANAGER_URL;
+#endif
             } 
         }
         else
@@ -1173,7 +1177,7 @@
     }
     else
         isSwitch = PR_FALSE;
-    
+#ifdef MOZ_PROFILELOCKING    
     nsProfileLock localLock;
     nsCOMPtr<nsILocalFile> localProfileDir(do_QueryInterface(profileDir, &rv));
     if (NS_FAILED(rv)) return rv;
@@ -1183,7 +1187,7 @@
         NS_ERROR("Could not get profile directory lock.");
         return rv;
     }
-
+#endif
     nsCOMPtr<nsIObserverService> observerService = 
              do_GetService("@mozilla.org/observer-service;1", &rv);
     NS_ENSURE_TRUE(observerService, NS_ERROR_FAILURE);
@@ -1237,8 +1241,10 @@
         UpdateCurrentProfileModTime(PR_FALSE);        
     }
 
+#ifdef MOZ_PROFILELOCKING    
     // Do the profile switch
     localLock.Unlock(); // gDirServiceProvider will get and hold its own lock
+#endif
     gDirServiceProvider->SetProfileDir(profileDir);  
     mCurrentProfileName.Assign(aCurrentProfile);    
     gProfileDataAccess->SetCurrentProfile(aCurrentProfile);
