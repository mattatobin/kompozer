<?xml version="1.0"?> 

<!-- ***** BEGIN LICENSE BLOCK *****
   - Version: MPL 1.1/GPL 2.0/LGPL 2.1
   -
   - The contents of this file are subject to the Mozilla Public License Version
   - 1.1 (the "License"); you may not use this file except in compliance with
   - the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License.
   -
   - The Original Code is Mozilla.org.
   -
   - The Initial Developer of the Original Code is
   - Netscape Communications Corporation.
   - Portions created by the Initial Developer are Copyright (C) 1999-2000
   - the Initial Developer. All Rights Reserved.
   -
   - Contributor(s):
   -    Ben Goodger
   -    Michael Lowe
   -    Sammy Ford
   -    Daniel Glazman (glazman@disruptive-innovations.com), on behalf of Linspire Inc.
   -    Fabien Cazenave <kaze@kompozer.net>
   -
   - Alternatively, the contents of this file may be used under the terms of
   - either the GNU General Public License Version 2 or later (the "GPL"), or
   - the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
   - in which case the provisions of the GPL or the LGPL are applicable instead
   - of those above. If you wish to allow use of your version of this file only
   - under the terms of either the GPL or the LGPL, and not to allow others to
   - use your version of this file under the terms of the MPL, indicate your
   - decision by deleting the provisions above and replace them with the notice
   - and other provisions required by the LGPL or the GPL. If you do not delete
   - the provisions above, a recipient may use your version of this file under
   - the terms of any one of the MPL, the GPL or the LGPL.
   -
   - ***** END LICENSE BLOCK ***** -->

<?xml-stylesheet type="text/css" href="chrome://editor/skin/"?> 
<?xml-stylesheet type="text/css" href="chrome://editor/skin/editorPrimaryToolbar.css"?> 
<?xml-stylesheet type="text/css" href="chrome://editor/skin/editorFormatToolbar.css"?> 
<?xml-stylesheet type="text/css" href="chrome://editor/skin/editorModeToolbar.css"?> 
<?xml-stylesheet type="text/css" href="chrome://communicator/skin/brand.css"?>
<?xml-stylesheet type="text/css" href="chrome://communicator/skin/communicator.css"?> 
<?xml-stylesheet type="text/css" href="chrome://communicator/skin/sidebar/"?>

<!-- Kaze: this one is required for the JavaScript console -->
<?xml-stylesheet type="text/css" href="chrome://global/skin/findBar.css"?>

<?xul-overlay href="chrome://global/content/globalOverlay.xul"?>
<?xul-overlay href="chrome://editor/content/utilityOverlay.xul"?>
<?xul-overlay href="chrome://communicator/content/viewZoomOverlay.xul"?>
<?xul-overlay href="chrome://editor/content/composerOverlay.xul"?>
<?xul-overlay href="chrome://communicator/content/tasksOverlay.xul"?>
<?xul-overlay href="chrome://global/content/charsetOverlay.xul"?>
<?xul-overlay href="chrome://communicator/content/contentAreaContextOverlay.xul"?>
<?xul-overlay href="chrome://communicator/content/sidebar/sidebarOverlay.xul"?>
<?xul-overlay href="chrome://communicator/content/communicatorOverlay.xul"?>

<!-- let's all have a though for the late editorOverlay.xul, who faithfully
     served us so many years. May it rest in peace, but some day, even the
     comment below will go... -->
<!-- ?xul-overlay href="chrome://editor/content/editorOverlay.xul"? -->

# All DTD information is stored in a separate file so that it can be shared by hiddenWindow.xul.
#include nvu-doctype.inc

<window id="editorWindow"
        xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
        xmlns:html="http://www.w3.org/1999/xhtml"
        onload="EditorOnLoad()"
        onunload="EditorShutdown()"
        onclose="return EditorCanClose()"
        onfocus="EditorOnFocus()"
        contenttitlesetting="true"
        titlemodifier="&editorWindow.titlemodifier;"
        titlemenuseparator="&editorWindow.titlemodifiermenuseparator;"
        windowtype="composer:html"
        width="750" height="520"
        screenX="10" screenY="10"
        persist="screenX screenY width height sizemode">

# #ifndef XP_MACOSX
# All JS files that browser.xul wishes to include *must* go into the nvu-scripts.inc file
# so that they can be shared by hiddenWindow.xul.
#include nvu-scripts.inc

# All sets except for popupsets (commands, keys, stringbundles and broadcasters) *must* go into the 
# nvu-sets.inc file for sharing with hiddenWindow.xul.
#include nvu-sets.inc
# #endif

  <tipoftheday id="tipoftheday" src="chrome://tipoftheday/locale/tipoftheday.rdf" item="random"/>

  <popupset id="editorContentContextSet">
    <popup id="main-toolbar-context-menu">
      <menuitem oncommand="CustomizeToolbar('EditorToolbox');" id="CustomizeMainToolbar"   label="&customizeToolbar.label;" accesskey="&customizeToolbar.accesskey;"/>
    </popup>
    <popup id="format-toolbar-context-menu">
      <menuitem oncommand="CustomizeToolbar('FormatToolbox');" id="CustomizeFormatToolbar" label="&customizeToolbar.label;" accesskey="&customizeToolbar.accesskey;"/>
    </popup>
#include nvu-context.inc
  </popupset>
  <!-- popup id="sidebarPopup"/ -->

  <tooltip id="aHTMLTooltip" onpopupshowing="return FillInHTMLTooltip(this);"/>
  
  <toolbox class="toolbox-top" id="EditorToolbox" mode="full">
#include nvu-menubar.inc
#include nvu-maintoolbar.inc
    <!--toolbarset id="customToolbars" context="toolbar-context-menu"/-->
  </toolbox>

  <toolbox id="FormatToolbox" mode="full" canchangemode="false">
#include nvu-formattoolbar.inc
  </toolbox>
 
  <!-- sidebar/toolbar/content/status -->
  <hbox id="sidebar-parent" flex="1">
    <!-- From sidebarOverlay.xul -->
    <vbox id="sidebar-box" class="chromeclass-extrachrome" hidden="true"/>
    <splitter id="sidebar-splitter" class="chromeclass-extrachrome" hidden="true"/>
    <vbox id="appcontent" flex="1">
      <deck id="ContentWindowDeck" selectedIndex="0" flex="1">
        <tabeditor id="tabeditor" collapserulers="false"/>
        <vbox id="SourceEditor">
          <label id="doctype-text" crop="right"/>
          <editor type="content" id="content-source" context="editorSourceContext" flex="1"/>
        </vbox>
      </deck>
      <!-- View/Edit mode toolbar -->
      <hbox id="EditModeToolbar" align="center" hidden="false" persist="collapsed">
        <tabs id="DisplayModeTabs" class="tabs-bottom" flex="0">
          <tab id="NormalModeButton"   class="tab-bottom edit-mode _plain" type="text" selected="1"
               label="&NormalModeTab.label;"  oncommand="goDoCommand('cmd_NormalMode');"
               tooltiptext="&NormalMode.tooltip;"/>
          <tab id="TagModeButton"      class="tab-bottom edit-mode _plain" type="text" selected="0"
               label="&AllTagsMode.label;"    oncommand="goDoCommand('cmd_AllTagsMode');"
               tooltiptext="&AllTagsMode.tooltip;"/>
          <tab id="PreviewModeButton"  class="tab-bottom edit-mode _plain" type="text" selected="0"
               label="&PreviewMode.label;"    oncommand="goDoCommand('cmd_PreviewMode');"
               tooltiptext="&PreviewMode.tooltip;"/>
        </tabs>
        <spacer flex="1"/>
        <tabs id="EditModeTabs" flex="0">
          <tab id="DesignModeButton"   class="tab-bottom edit-mode _plain" type="text" selected="1"
               label="&DesignMode.label;"     oncommand="goDoCommand('cmd_DesignMode');"
               tooltiptext="&DesignMode.tooltip;"     dir="&SourceTabDirection;"/>
          <tab id="SplitModeButton"    class="tab-bottom edit-mode _plain" type="text" selected="0"
               label="&SplitMode.label;"      oncommand="goDoCommand('cmd_SplitMode');"
               tooltiptext="&SplitMode.tooltip;"      dir="&SourceTabDirection;"/>
          <tab id="SourceModeButton"   class="tab-bottom edit-mode _plain" type="text" selected="0"
               label="&SourceMode.label;"     oncommand="goDoCommand('cmd_HTMLSourceMode');"
               tooltiptext="&HTMLSourceMode.tooltip;" dir="&SourceTabDirection;"/>
        </tabs>
      </hbox>
      <!-- HTML source browser/editor -->
      <splitter id="browser-splitter" class="chromeclass-extrachrome" hidden="true"
                resizebefore="farthest"
                oncommand="updateViewSourceCheckbox(this);"
                state="collapsed"
                collapse="after"/>
      <deck id="SourceBrowserDeck" selectedIndex="0"
            style="min-height: 7em;"
            collapsed="true">
        <browser id="SourceBrowser" flex="1" disablehistory="true" src="about:blank"
                 onclick="onClickSourceDock(event);"
                 context="viewSourceContext"/>
        <!-- a textbox will be dynamically created here when necessary -->
      </deck>
    </vbox> <!-- appcontent -->
  </hbox><!-- sidebar-parent -->

  <!-- Some of this is from globalOverlay.xul -->
  <statusbar class="chromeclass-status" id="status-bar">
    <!--statusbarpanel id="component-bar"/-->
    <statusbarpanel id="structToolbar" flex="1" pack="end">
      <label id="structSpacer" value="" flex="1"/>
    </statusbarpanel>
    <statusbarpanel class="statusbarpanel-iconic" id="offline-status"/>
  </statusbar>

</window>
