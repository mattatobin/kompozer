<?xml version="1.0"?>
<!-- ***** BEGIN LICENSE BLOCK *****
   - Version: MPL 1.1/GPL 2.0/LGPL 2.1
   -
   - The contents of this file are subject to the Mozilla Public License Version
   - 1.1 (the "License"); you may not use this file except in compliance with
   - the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License.
   -
   - The Original Code is CaScadeS, a stylesheet editor for Composer.
   -
   - The Initial Developer of the Original Code is
   - Daniel Glazman.
   - Portions created by the Initial Developer are Copyright (C) 2002
   - the Initial Developer. All Rights Reserved.
   -
   - Contributor(s):
   -   Original author: Daniel Glazman (daniel@glazman.org)
   -   Contributor:     Fabien Cazenave (kaze@kompozer.net)
   -
   - Alternatively, the contents of this file may be used under the terms of
   - either the GNU General Public License Version 2 or later (the "GPL"), or
   - the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
   - in which case the provisions of the GPL or the LGPL are applicable instead
   - of those above. If you wish to allow use of your version of this file only
   - under the terms of either the GPL or the LGPL, and not to allow others to
   - use your version of this file under the terms of the MPL, indicate your
   - decision by deleting the provisions above and replace them with the notice
   - and other provisions required by the LGPL or the GPL. If you do not delete
   - the provisions above, a recipient may use your version of this file under
   - the terms of any one of the MPL, the GPL or the LGPL.
   -
   - ***** END LICENSE BLOCK ***** -->

<!DOCTYPE window SYSTEM "chrome://cascades/locale/cascadesOverlay.dtd">

<overlay id="cascadesToolbar" 
         xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
         xmlns:html="http://www.w3.org/1999/xhtml"
         xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
         orient="vertical">

  <script type="application/x-javascript" src="chrome://cascades/content/cascadesOverlay.js"/>
  <script type="application/x-javascript" src="chrome://cascades/content/EdCssUtils.js"/>

  <!-- Tools menu item + keyboard shortcut -->
  <menupopup id="taskPopup">
    <menuitem id="menu_CaScadeS"
              label       = "&cascadesMenuItem.label;" key = "stylekb"
              accesskey   = "&cascadesMenuItem.accesskey;"
              observes    = "cmd_cssEditor"
              class       = "menuitem-iconic"
              insertafter = "menu_validate"/>
  </menupopup>
  <keyset id="editorKeys">
    <key id="stylekb"  keycode="&cascadesMenuItem.keybinding;" observes="cmd_cssEditor"/>
  </keyset>

  <!-- Toolbar button -->
  <toolbarpalette id="NvuToolbarPalette">
    <toolbarbutton id="cssButton"
                   class       = "toolbarbutton-1"
                   label       = "CSS"
                   observes    = "cmd_cssEditor"
                   tooltiptext = "&cascadesMenuItem.label;">
    </toolbarbutton>
  </toolbarpalette>

  <!-- Main window context menu
  <popup id="editorContentContext">
    <menuitem insertafter="styles-separator"
              label="&inlineStyles.label;"
              accesskey="&inlinestyles.accesskey;"
              oncommand="openCSSPropsDialog(this);"/>
  </popup> -->

  <!-- Structure Toolbar context menu -->
  <popup id="structToolbarContext">
    <menu id="idSelectMenu" insertbefore="advancedPropsTag"
          label="&idSelectMenu.label;" oncommand="onIDSelectChange()">
      <menupopup id="idSelectMenuPopup" onpopupshowing="InitIDSelectMenu(this)"/>
    </menu>
    <menu id="classSelectMenu" insertbefore="advancedPropsTag"
          label="&classSelectMenu.label;" oncommand="onClassSelectChange()">
      <menupopup id="classSelectMenuPopup" onpopupshowing="InitClassSelectMenu(this)"/>
    </menu>
    <menu id="changeInlineStylesContextMenu" insertbefore="advancedPropsTag" hidden="true"
          label="&inlineStyles.label;" accesskey="&inlinestyles.accesskey;">
      <menupopup onpopupshowing="EnableExtractInlineStyles()">
        <menuitem id="textProps"        label="&textProperties.label;"
                                        accesskey="&textproperties.accesskey;"
                                        oncommand="openCSSPropsDialog(this, 'text');" />
        <menuitem id="borderProps"      label="&borderProperties.label;"
                                        accesskey="&borderproperties.accesskey;"
                                        oncommand="openCSSPropsDialog(this, 'border');" />
        <menuitem id="backgroundProps"  label="&backgroundProperties.label;"
                                        accesskey="&backgroundproperties.accesskey;"
                                        oncommand="openCSSPropsDialog(this, 'background');" />
        <menuitem id="boxProps"         label="&boxProperties.label;"
                                        accesskey="&boxproperties.accesskey;"
                                        oncommand="openCSSPropsDialog(this, 'box');" />
        <menuitem id="auralProps"       label="&auralProperties.label;"
                                        accesskey="&auralproperties.accesskey;"
                                        oncommand="openCSSPropsDialog(this, 'aural');" />
        <menuseparator/>
        <menuitem id="makeCSSRule"      label="&makeCSSRule.label;"
                                        accesskey="&makecssrule.accesskey;"
                                        oncommand="ExtractInlineStyles()"/>
      </menupopup>
    </menu>
    <menuseparator insertbefore="advancedPropsTag"/>
    <menuitem id="changeInlineStyles2" insertbefore="advancedPropsTag"
              label="&inlineStyles.label;" accesskey="&inlinestyles.accesskey;" oncommand="openCSSPropsDialog(this);" />
  </popup>

</overlay>
