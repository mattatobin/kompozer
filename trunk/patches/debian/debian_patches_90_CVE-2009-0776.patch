Updated fix for CVE-2009-0776, previous fix was incomplete. (MFSA 2009-09)
--- a/mozilla/rdf/tests/Makefile.in
+++ b/mozilla/rdf/tests/Makefile.in
@@ -40,9 +40,13 @@ topsrcdir	= @top_srcdir@
 srcdir		= @srcdir@
 VPATH		= @srcdir@
 
+MODULE = test_rdf
+
 include $(DEPTH)/config/autoconf.mk
 
 DIRS		= rdfcat rdfpoll triplescat
 
+XPCSHELL_TESTS = unit
+
 include $(topsrcdir)/config/rules.mk
 
--- /dev/null
+++ b/mozilla/rdf/tests/unit/sample.rdf
@@ -0,0 +1,9 @@
+<?xml version="1.0"?>
+
+<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
+         xmlns:dc="http://purl.org/dc/elements/1.1/">
+
+  <rdf:Description about="urn:mozilla:sample-data"
+    dc:title="Sample" />
+
+</rdf:RDF>
--- /dev/null
+++ b/mozilla/rdf/tests/unit/test_rdfredirect.js
@@ -0,0 +1,90 @@
+do_import_script("netwerk/test/httpserver/httpd.js");
+
+function getRDFService()
+{
+  return Components.classes["@mozilla.org/rdf/rdf-service;1"].
+    getService(Components.interfaces.nsIRDFService);
+}
+
+var server1, server2;
+
+function run_test()
+{
+  var samplefile = do_get_file('rdf/tests/unit/sample.rdf');
+
+  server1 = new nsHttpServer();
+  server1.registerPathHandler("/sample-xs.rdf", xsRedirect);
+  server1.registerPathHandler("/sample-local.rdf", localRedirect);
+  server1.registerFile('/sample.rdf', samplefile);
+  server1.start(4444);
+
+  server2 = new nsHttpServer();
+  server2.registerFile('/sample.rdf', samplefile);
+  server2.start(4445);
+
+  do_test_pending();
+
+  new rdfLoadObserver('http://localhost:4444/sample.rdf', true);
+  new rdfLoadObserver('http://localhost:4445/sample.rdf', true);
+  new rdfLoadObserver('http://localhost:4444/sample-xs.rdf', false);
+  new rdfLoadObserver('http://localhost:4444/sample-local.rdf', true);
+}
+
+var gPending = 0;
+
+function rdfLoadObserver(uri, shouldPass)
+{
+  this.shouldPass = shouldPass;
+  this.uri = uri;
+
+  ++gPending;
+
+  var rdfService = getRDFService();
+  this.ds = rdfService.GetDataSource(uri).
+    QueryInterface(Components.interfaces.nsIRDFXMLSink);
+  this.ds.addXMLSinkObserver(this);
+}
+
+rdfLoadObserver.prototype =
+{
+  onBeginLoad : function() { },
+  onInterrupt : function() { },
+  onResume : function() { },
+  onEndLoad : function() {
+    print("Testing results of loading " + this.uri);
+
+    var rdfs = getRDFService();
+    var res = rdfs.GetResource("urn:mozilla:sample-data");
+    var arc = rdfs.GetResource("http://purl.org/dc/elements/1.1/title");
+    var answer = this.ds.GetTarget(res, arc, true);
+    if (answer !== null) {
+      do_check_true(this.shouldPass);
+      do_check_true(answer instanceof Components.interfaces.nsIRDFLiteral);
+      do_check_eq(answer.Value, "Sample");
+    }
+    else {
+      do_check_false(this.shouldPass);
+    }
+
+    gPending -= 1;
+
+    if (gPending == 0) {
+      server1.stop();
+      server2.stop();
+      do_test_finished();
+    }
+  },
+  onError : function() { }
+}
+
+function xsRedirect(metadata, response)
+{
+  response.setStatusLine(metadata.httpVersion, 301, "Moved Permanently");
+  response.setHeader("Location", "http://localhost:4445/sample.rdf", false);
+}
+
+function localRedirect(metadata, response)
+{
+  response.setStatusLine(metadata.httpVersion, 301, "Moved Permanently");
+  response.setHeader("Location", "http://localhost:4444/sample.rdf", false);
+}
